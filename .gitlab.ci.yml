stages: [build,docker,ci,deploy,pages]

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  IMAGE_TAG: hugo:$CI_COMMIT_SHA
  USER: gitlab
  CI_URL: http://$CI_ENVIRONMENT_SLUG.blog.ci.yourlabs.io

build:
  stage: build
  image: node:alpine
  script:
  - apk add g++ hugo --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community
  - yarn install && yarn build
  - hugo
  - npx clean-css-cli -o public/prism.css public/prism.css
  - npx clean-css-cli -o public/fonts.css public/fonts.css
  artifacts:
    paths:
    - public

docker:
  stage: docker
  image: docker:stable
  environment:
    name: hugo/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.blog.ci.yourlabs.io
  script:
  - docker build -t $IMAGE_TAG --build-arg HUGO_URL=$CI_URL .

preprod-docker:
  stage: docker
  image: docker:stable
  environment:
    name: hugo/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.blog.ci.yourlabs.io
  script:
    - docker build -t hugo_preprod --build-arg HUGO_URL="https://test.ybs.re" .
    - docker save hugo_preprod | bzip2 > hugo.preprod
  artifacts:
    paths:
    - hugo.preprod
  only:
    refs:
      - mad
      - master

ci:
  stage: ci
  image: yourlabs/ansible
  before_script:
  - mkdir -p ~/.ssh; echo "$ci_key" > ~/.ssh/id_ed25519; echo "$ci_fingerprint" > ~/.ssh/known_hosts; chmod 700 ~/.ssh; chmod 600 ~/.ssh/*
  environment:
    name: hugo/$CI_COMMIT_REF_NAME
    url: http://hugo:hugo_boss@$CI_ENVIRONMENT_SLUG.blog.ci.yourlabs.io
    on_stop: ci-stop
  script:
  - bigsudo yourlabs.compose project=$CI_COMMIT_REF_NAME compose_hugo_image=$IMAGE_TAG lifetime=604800 hugo@ci.yourlabs.io -v | tee deploy.log
  - grep unreachable=0 deploy.log &> /dev/null
  - grep failed=0 deploy.log &> /dev/null

ci-stop:
  stage: ci
  image: yourlabs/ansible
  variables:
    GIT_STRATEGY: none
  when: manual
  environment:
    action: stop
    name: hugo/$CI_COMMIT_REF_NAME
  script:
  - mkdir -p ~/.ssh; echo "$ci_key" > ~/.ssh/id_ed25519; echo "$ci_fingerprint" > ~/.ssh/known_hosts; chmod 700 ~/.ssh; chmod 600 ~/.ssh/*
  - bigsudo yourlabs.compose down hugo@ci.yourlabs.io project=$CI_COMMIT_REF_NAME -v

deploy-preprod :
  stage: deploy
  image: alpine
  before_script:
  - mkdir -p ~/.ssh; echo "$fake_prod_key" > ~/.ssh/id_ed25519; echo "$fake_prod_fingerprint" > ~/.ssh/known_hosts; chmod 700 ~/.ssh; chmod 600 ~/.ssh/*
  - apk add openssh-client
  environment:
    name: preprod/$CI_COMMIT_REF_NAME
    url: https://hugo:hugo_boss@test.ybs.re
    on_stop: preprod-stop
  dependencies: [preprod-docker]
  script:
  - ssh hugo@test.ybs.re "mkdir -p /tmp/$CI_ENVIRONMENT_SLUG/hugo"
  - scp docker-compose-preprod.yml hugo@test.ybs.re:/tmp/$CI_ENVIRONMENT_SLUG/hugo/docker-compose.yml
  - scp hugo.preprod hugo@test.ybs.re:/tmp/$CI_ENVIRONMENT_SLUG/hugo/.
  - ssh hugo@test.ybs.re "cd /tmp/$CI_ENVIRONMENT_SLUG/hugo/. ;
                          sudo docker rm -f hugo_preprod || :;
                          sudo docker rmi -f hugo_preprod:latest || :;
                          bunzip2 -c hugo.preprod | sudo docker load &&
                          sudo docker-compose up -d"
  only:
    refs:
      - mad
      - master


preprod-stop:
  stage: deploy
  image: alpine
  before_script:
  - mkdir -p ~/.ssh; echo "$fake_prod_key" > ~/.ssh/id_ed25519; echo "$fake_prod_fingerprint" > ~/.ssh/known_hosts; chmod 700 ~/.ssh; chmod 600 ~/.ssh/*
  - apk add openssh-client
  environment:
    name: preprod/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  script:
  - ssh hugo@test.ybs.re "cd /tmp/$CI_ENVIRONMENT_SLUG/hugo/. &&
                          sudo docker rm -f hugo_preprod ||:;
                          sudo docker rmi -f hugo_preprod:latest || :;"
  only:
    refs:
      - mad
      - master

pages:
  stage: pages
  image: registry.gitlab.com/pages/hugo:latest
  dependencies: [build]
  script:
  - gzip -k -6 $(find public -type f)
  artifacts:
    paths:
    - public
  only:
  - master

